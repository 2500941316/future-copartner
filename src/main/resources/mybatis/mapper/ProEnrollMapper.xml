<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shu.copartner.mapper.ProEnrollMapper">
  <resultMap id="BaseResultMap" type="com.shu.copartner.pojo.ProEnroll">
    <id column="enroll_id" jdbcType="BIGINT" property="enrollId" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="person_id" jdbcType="BIGINT" property="personId" />
    <result column="person_name" jdbcType="VARCHAR" property="personName" />
    <result column="enroll_time" jdbcType="TIMESTAMP" property="enrollTime" />
    <result column="uneroll_time" jdbcType="TIMESTAMP" property="unerollTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enroll_id, activity_id, person_id, person_name, enroll_time, uneroll_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.shu.copartner.pojo.ProEnrollExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PRO_ENROLL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PRO_ENROLL
    where enroll_id = #{enrollId,jdbcType=BIGINT}
  </select>

  <!--根据person_id 查询该用户报名的所有活动-->
  <select id="selectEnrollByPersonId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from PRO_ENROLL
    where person_id = #{personId}
        and is_deleted = 0
  </select>

  <!--根据person_id 与 activity_id 查询 判断是否报名该活动记录-->
  <select id="selectEnrollByPersonActivityId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from PRO_ENROLL
    where person_id = #{personId}
        and activity_id = #{activityId}
  </select>

  <!--根据activity_id 查询该活动全部报名的人员-->
  <select id="selectEnrollByActivityId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from PRO_ENROLL
    where  activity_id = #{activityId}
            and is_deleted = 0
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from PRO_ENROLL
    where enroll_id = #{enrollId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.copartner.pojo.ProEnrollExample">
    delete from PRO_ENROLL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.copartner.pojo.ProEnroll" useGeneratedKeys="true" keyProperty="enrollId">
    insert into PRO_ENROLL (enroll_id, activity_id, person_id, 
      person_name, enroll_time, uneroll_time, 
      is_deleted)
    values (#{enrollId,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, #{personId,jdbcType=BIGINT}, 
      #{personName,jdbcType=VARCHAR}, #{enrollTime,jdbcType=TIMESTAMP}, #{unerollTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.copartner.pojo.ProEnroll" useGeneratedKeys="true" keyProperty="enrollId">
    insert into PRO_ENROLL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enrollId != null">
        enroll_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="personName != null">
        person_name,
      </if>
      <if test="enrollTime != null">
        enroll_time,
      </if>
      <if test="unerollTime != null">
        uneroll_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enrollId != null">
        #{enrollId,jdbcType=BIGINT},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="personName != null">
        #{personName,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unerollTime != null">
        #{unerollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.copartner.pojo.ProEnrollExample" resultType="java.lang.Long">
    select count(*) from PRO_ENROLL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PRO_ENROLL
    <set>
      <if test="record.enrollId != null">
        enroll_id = #{record.enrollId,jdbcType=BIGINT},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=BIGINT},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=BIGINT},
      </if>
      <if test="record.personName != null">
        person_name = #{record.personName,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollTime != null">
        enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unerollTime != null">
        uneroll_time = #{record.unerollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PRO_ENROLL
    set enroll_id = #{record.enrollId,jdbcType=BIGINT},
      activity_id = #{record.activityId,jdbcType=BIGINT},
      person_id = #{record.personId,jdbcType=BIGINT},
      person_name = #{record.personName,jdbcType=VARCHAR},
      enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      uneroll_time = #{record.unerollTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.copartner.pojo.ProEnroll">
    update PRO_ENROLL
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=BIGINT},
      </if>
      <if test="personName != null">
        person_name = #{personName,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unerollTime != null">
        uneroll_time = #{unerollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where enroll_id = #{enrollId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.copartner.pojo.ProEnroll">
    update PRO_ENROLL
    set activity_id = #{activityId,jdbcType=BIGINT},
      person_id = #{personId,jdbcType=BIGINT},
      person_name = #{personName,jdbcType=VARCHAR},
      enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      uneroll_time = #{unerollTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where enroll_id = #{enrollId,jdbcType=BIGINT}
  </update>
</mapper>