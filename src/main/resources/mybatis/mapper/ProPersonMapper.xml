<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shu.copartner.mapper.ProPersonMapper">
  <resultMap id="BaseResultMap" type="com.shu.copartner.pojo.ProPerson">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="birthDay" jdbcType="TIMESTAMP" property="birthday" />
    <result column="campus" jdbcType="VARCHAR" property="campus" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gradutedate" jdbcType="DATE" property="gradutedate" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="resumeUrl" jdbcType="VARCHAR" property="resumeurl" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="workername" jdbcType="VARCHAR" property="workername" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="supervisor" jdbcType="BIT" property="supervisor" />
    <result column="expect" jdbcType="VARCHAR" property="expect" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, birthDay, campus, company, education, name, gradutedate, major, resumeUrl, sex, 
    workername, description, supervisor, expect
  </sql>
  <select id="selectByExample" parameterType="com.shu.copartner.pojo.ProPersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PRO_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PRO_PERSON
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from PRO_PERSON
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.copartner.pojo.ProPersonExample">
    delete from PRO_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.copartner.pojo.ProPerson">
    insert into PRO_PERSON (id, birthDay, campus, 
      company, education, name, 
      gradutedate, major, resumeUrl, 
      sex, workername, description, 
      supervisor, expect)
    values (#{id,jdbcType=BIGINT}, #{birthday,jdbcType=TIMESTAMP}, #{campus,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gradutedate,jdbcType=DATE}, #{major,jdbcType=VARCHAR}, #{resumeurl,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{workername,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{supervisor,jdbcType=BIT}, #{expect,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.copartner.pojo.ProPerson">
    insert into PRO_PERSON
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="birthday != null">
        birthDay,
      </if>
      <if test="campus != null">
        campus,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gradutedate != null">
        gradutedate,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="resumeurl != null">
        resumeUrl,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="workername != null">
        workername,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="supervisor != null">
        supervisor,
      </if>
      <if test="expect != null">
        expect,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="campus != null">
        #{campus,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gradutedate != null">
        #{gradutedate,jdbcType=DATE},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="resumeurl != null">
        #{resumeurl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="workername != null">
        #{workername,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="supervisor != null">
        #{supervisor,jdbcType=BIT},
      </if>
      <if test="expect != null">
        #{expect,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.copartner.pojo.ProPersonExample" resultType="java.lang.Long">
    select count(*) from PRO_PERSON
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PRO_PERSON
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.birthday != null">
        birthDay = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.campus != null">
        campus = #{record.campus,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gradutedate != null">
        gradutedate = #{record.gradutedate,jdbcType=DATE},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.resumeurl != null">
        resumeUrl = #{record.resumeurl,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.workername != null">
        workername = #{record.workername,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.supervisor != null">
        supervisor = #{record.supervisor,jdbcType=BIT},
      </if>
      <if test="record.expect != null">
        expect = #{record.expect,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PRO_PERSON
    set id = #{record.id,jdbcType=BIGINT},
      birthDay = #{record.birthday,jdbcType=TIMESTAMP},
      campus = #{record.campus,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gradutedate = #{record.gradutedate,jdbcType=DATE},
      major = #{record.major,jdbcType=VARCHAR},
      resumeUrl = #{record.resumeurl,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      workername = #{record.workername,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      supervisor = #{record.supervisor,jdbcType=BIT},
      expect = #{record.expect,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.copartner.pojo.ProPerson">
    update PRO_PERSON
    <set>
      <if test="birthday != null">
        birthDay = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="campus != null">
        campus = #{campus,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gradutedate != null">
        gradutedate = #{gradutedate,jdbcType=DATE},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="resumeurl != null">
        resumeUrl = #{resumeurl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="workername != null">
        workername = #{workername,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="supervisor != null">
        supervisor = #{supervisor,jdbcType=BIT},
      </if>
      <if test="expect != null">
        expect = #{expect,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.copartner.pojo.ProPerson">
    update PRO_PERSON
    set birthDay = #{birthday,jdbcType=TIMESTAMP},
      campus = #{campus,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gradutedate = #{gradutedate,jdbcType=DATE},
      major = #{major,jdbcType=VARCHAR},
      resumeUrl = #{resumeurl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      workername = #{workername,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      supervisor = #{supervisor,jdbcType=BIT},
      expect = #{expect,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>