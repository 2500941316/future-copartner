<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- mybatis逆向生成xml配置 -->
<generatorConfiguration>
    <properties resource="application.yml"/> <!-- 数据库连接配置文件 -->
    <context id="sqlserverTables" targetRuntime="MyBatis3">
        <!-- 生成的pojo，将implements Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://114.55.93.118:3306/activiti?useSSL=false"
                        userId="root"
                        password="aaa">
        </jdbcConnection>

        <!--
            默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--
            生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
            也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下<br data-filtered="filtered">　　　　　　　（通俗的讲就是你想要把生成的实体类的放到哪里）
        -->
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->
        <javaModelGenerator targetPackage="com.shu.copartner.pojo" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--对应的mapper.xml文件（通俗的讲就是你要把mapper.xml文件放到什么地方去，我是放到resource下一个名叫mappers的文件夹里面了）  -->
        <sqlMapGenerator targetPackage="mybatis/mapper" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 （通俗的讲就是你要生成的稻城mapper接口的地方 需要根据自己的文件进行配置） -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.shu.copartner.mapper" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--        <table schema="" tableName="PRO_APPLICATION"></table>-->
        <!--        <table schema="" tableName="PRO_COMPANY"></table>-->
        <!--        <table schema="" tableName="PRO_GROUP"></table>-->
        <!--        <table schema="" tableName="PRO_PERSON"></table>-->
        <!--        <table schema="" tableName="PRO_PROJECT"></table>-->
        <!--        <table schema="" tableName="PRO_USER"></table>-->
        <!--        <table schema="" tableName="ACT_RU_TASK"></table>-->
        <!--        <table schema="" tableName="ACT_HI_TASKINST"></table>-->
        <!--        <table schema="" tableName="ACT_HI_VARINST"></table>-->
        <!--        <table schema="" tableName="ACT_RE_DEPLOYMENT"></table>-->
        <table schema="" tableName="PRO_TASK_PARAMETER">
<!--            <columnOverride column="news_introduction" jdbcType="VARCHAR"/>-->
<!--            <columnOverride column="news_content" jdbcType="VARCHAR"/>-->
        </table>

    </context>
</generatorConfiguration>